---
- name: Check for glibc
  ansible.builtin.command: ldd /bin/ls
  register: ldd_output
  changed_when: false
  tags:
    - containerd

- name: Verify glibc-based system
  ansible.builtin.fail:
    msg: "This system is not glibc-based (musl detected). Containerd binary requires a glibc-based system."
  when: "'libc.so.6' not in ldd_output.stdout"
  tags:
    - containerd

- name: Get system architecture
  ansible.builtin.set_fact:
    system_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"
  tags:
    - containerd

- name: Set containerd download info
  ansible.builtin.set_fact:
    containerd_info: >-
      {{ containerd_releases | selectattr('version', 'eq', containerd_version) 
         | selectattr('arch', 'eq', system_arch) | list }}
  failed_when: containerd_info | length == 0
  register: containerd_info_result
  tags:
    - containerd

- name: Set final containerd info
  ansible.builtin.set_fact:
    containerd_info: "{{ containerd_info[0] }}"
  when: containerd_info_result is success
  tags:
    - containerd

- name: debug
  ansible.builtin.debug:
    var: containerd_info
  tags:
    - containerd

- name: Download containerd
  block:
    - name: Download checksum file
      ansible.builtin.get_url:
        url: "{{ containerd_info.checksum_url }}"
        dest: /tmp/containerd.sha256sum
        mode: '0644'

    - name: Read checksum file
      ansible.builtin.slurp:
        src: /tmp/containerd.sha256sum
      register: checksum_content

    - name: Download and verify containerd
      ansible.builtin.get_url:
        url: "{{ containerd_info.tar_url }}"
        dest: /tmp/containerd.tar.gz
        checksum: "sha256:{{ (checksum_content['content'] | b64decode).split(' ')[0] }}"
        mode: '0644'

    - name: Extract containerd to /usr/local
      ansible.builtin.unarchive:
        src: /tmp/containerd.tar.gz
        dest: /usr/local
        remote_src: yes

    - name: Clean up downloaded files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/containerd.tar.gz
        - /tmp/containerd.sha256sum
  rescue:
    - name: Clean up on failure
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/containerd.tar.gz
        - /tmp/containerd.sha256sum
      
    - name: Fail with error
      ansible.builtin.fail:
        msg: "Failed to download and verify containerd"
  tags:
    - containerd
